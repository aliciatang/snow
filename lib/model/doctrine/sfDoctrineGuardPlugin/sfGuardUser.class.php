<?php

/**
 * sfGuardUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    valueInvest
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class sfGuardUser extends PluginsfGuardUser
{
  /**
   *
   */
  public function getSecurities( $state='current')
  {
    switch($state)
    {
      case 'current':
        $ret = Doctrine_Manager::getInstance()
              ->getCurrentConnection()
              ->fetchAll('select a.*,a.cprice as sell_price, (a.cprice-a.buy_price)/a.buy_price*100 as gain from (select IFNULL(p.cprice,0) as cprice,t.security_id,(select SUBSTR(symbol,1,6) from security where id=t.security_id) as symbol, sum(t.quantity) as quantity,IFNULL(p.cprice,0)*sum(t.quantity) as mkt_value, sum(IF(t.quantity>0,amount,0))/sum(IF(t.action_id IN (1,46,48),t.quantity,0))*(-1) as buy_price, sum(IF(t.action_id in (2,4,7),t.amount,0)) as dividend, sum(`quantity`)*p.cprice+sum(IF(t.action_id in (2,4,7),t.amount,0)) as total_gain from transaction t left join (select p2.security_id,p2.cprice from price p2 where p2.date=(select max(p3.date) from price p3 where p3.security_id=p2.security_id)) p on p.security_id=t.security_id where t.account_id in (select id from account where user_id='.$this->getId().') group by t.security_id having quantity > 0 order by sum(quantity)*p.cprice desc ) a');
        break;
      case 'history':
        $ret = Doctrine_Manager::getInstance()
              ->getCurrentConnection()
              ->fetchAll('SELECT s.`symbol`,SUM(sa.`buy_quantity`) `quantity`, IF(SUM(sa.`buy_quantity`) > 0,SUM(sa.`buy_amount`)/SUM(sa.`buy_quantity`),0)*(-1) AS `buy_price`, IF(SUM(sa.`sell_quantity`) < 0,SUM(sa.`sell_amount`)/SUM(sa.`sell_quantity`),0)*(-1) AS `sell_price`, (SUM(sa.`sell_amount`)/SUM(sa.`buy_amount`)*(-1)-1)*100 AS gain,SUM(sa.`sell_amount`) as mkt_value,SUM(sa.`dividend`) AS dividend, SUM(sa.`amount`) AS total_gain FROM `account_security` sa LEFT JOIN (`security` s, `account` a ) ON s.id = sa.`security_id` && a.id=sa.`account_id` WHERE sa.`quantity` =0 && sa.`security_id` > 1 && a.`user_id`='.$this->getId().' GROUP BY sa.`security_id`');
        break;
      default:
        break;
    }
    $total = array();
    $total['symbol']      = 'Total';
    $total['quantity']    = 0;
    $total['mkt_value']   = 0;
    $total['gain']        = 0;
    $total['dividend']    = 0;
    $total['buy_price']   = 0;
    $total['total_gain']  = 0 ;
    foreach($ret as $s)
    {
      $total['quantity']  += $s['quantity'];
      $total['mkt_value'] += isset($s['mkt_value'])?$s['mkt_value']:0;
      $total['gain']      += $s['gain'];
      $total['dividend']  += $s['dividend'];
      $total['buy_price'] += $s['quantity']*$s['buy_price'];
      $total['total_gain']+= $s['total_gain'];
    }
    $total['sell_price'] = $total['mkt_value']/$total['quantity'];
    $total['buy_price'] = $total['buy_price']/$total['quantity'];
    $ret[]=$total;
    return $ret;
  }
}
